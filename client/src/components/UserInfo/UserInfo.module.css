/* ◊ê◊ô◊ü overlay ◊§◊†◊ô◊û◊ô ◊õ◊ê◊ü ‚Äì ◊î-overlay/Sheet ◊î◊ï◊ê ◊©◊ú RoutesLayout */

/* ===== Main Card (content inside the sheet) ===== */
.modalContent {
  position: relative;
  z-index: 1;
  background: rgba(255, 255, 255, 0.9);
  backdrop-filter: blur(20px);
  border-radius: 2rem;
  padding: 2rem;
  border: 1px solid rgba(226, 232, 240, 0.8);
  box-shadow: 0 20px 50px rgba(0, 0, 0, 0.15);
  max-width: 800px;
  width: 100%;
  max-height: 80vh;
  overflow-y: auto;
  animation: slideIn 0.5s ease-out;
}

@keyframes slideIn {
  from { opacity: 0; transform: translateY(30px) scale(0.95); }
  to   { opacity: 1; transform: translateY(0) scale(1); }
}

/* ===== Header ===== */
.modalHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 2rem;
  padding-bottom: 1rem;
  border-bottom: 2px solid rgba(226, 232, 240, 0.6);
}

.modalTitle {
  font-size: 1.75rem;
  font-weight: 700;
  color: #111827;
  margin: 0;
  display: flex;
  align-items: center;
  gap: 0.75rem;
}

.modalTitle::before {
  content: 'üë§';
  font-size: 1.5rem;
  padding: 0.5rem;
  background: linear-gradient(135deg, #6366f1, #8b5cf6);
  border-radius: 1rem;
  filter: drop-shadow(0 4px 15px rgba(99, 102, 241, 0.3));
}

.actions {
  display: flex;
  gap: 0.75rem;
  align-items: center;
}

/* ===== Buttons ===== */
.editButton, .deleteButton, .saveButton, .closeButton {
  padding: 0.75rem 1.5rem;
  border: none;
  border-radius: 1rem;
  font-weight: 600;
  font-size: 0.9rem;
  cursor: pointer;
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  min-width: 100px;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
}

.editButton {
  background: linear-gradient(135deg, #6366f1, #8b5cf6);
  color: white;
}
.editButton:hover {
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(99, 102, 241, 0.4);
}

.deleteButton {
  background: linear-gradient(135deg, #ef4444, #dc2626);
  color: white;
}
.deleteButton:hover {
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(239, 68, 68, 0.4);
}

.saveButton {
  background: linear-gradient(135deg, #10b981, #34d399);
  color: white;
}
.saveButton:hover {
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(16, 185, 129, 0.4);
}

.closeButton {
  background: rgba(107, 114, 128, 0.1);
  color: #374151;
  border: 1px solid rgba(209, 213, 219, 0.8);
}
.closeButton:hover {
  background: rgba(107, 114, 128, 0.2);
  transform: translateY(-1px);
}

/* ===== Sections ===== */
.infoSection {
  margin-bottom: 2rem;
  background: rgba(249, 250, 251, 0.6);
  backdrop-filter: blur(10px);
  border-radius: 1.5rem;
  padding: 1.5rem;
  border: 1px solid rgba(226, 232, 240, 0.6);
  transition: all 0.3s ease;
}
.infoSection:hover {
  background: rgba(249, 250, 251, 0.8);
  border-color: rgba(99, 102, 241, 0.3);
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.08);
}

.sectionTitle {
  font-size: 1.25rem;
  font-weight: 600;
  color: #1f2937;
  margin: 0 0 1rem 0;
  display: flex;
  align-items: center;
  gap: 0.5rem;
}
.sectionTitle:nth-of-type(1)::before { content: 'üìù'; }
.sectionTitle:nth-of-type(2)::before { content: 'üè†'; }
.sectionTitle:nth-of-type(3)::before { content: 'üè¢'; }

/* ===== Info Grid ===== */
.infoGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 0.75rem;
}

.infoItem {
  display: flex;
  flex-direction: column;
  gap: 0.25rem;
  background: rgba(255, 255, 255, 0.8);
  padding: 0.75rem;
  border-radius: 0.75rem;
  border: 1px solid rgba(226, 232, 240, 0.6);
  transition: all 0.3s ease;
  min-height: 60px;
}
.infoItem:hover {
  background: rgba(255, 255, 255, 0.95);
  border-color: rgba(99, 102, 241, 0.3);
  transform: translateY(-1px);
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
}

.label {
  font-size: 0.75rem;
  font-weight: 600;
  color: #6b7280;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  line-height: 1;
}

.value {
  font-size: 0.9rem;
  font-weight: 500;
  color: #1f2937;
  word-break: break-word;
  line-height: 1.3;
}
.value:empty::after {
  content: "Not provided";
  color: #9ca3af;
  font-style: italic;
  font-weight: 400;
}

/* ===== Address Block ===== */
.addressBlock {
  background: rgba(255, 255, 255, 0.8);
  padding: 1.25rem;
  border-radius: 1rem;
  border: 1px solid rgba(226, 232, 240, 0.6);
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
}
.addressBlock::before {
  content: '';
  position: absolute;
  top: 0; left: 0;
  width: 100%; height: 3px;
  background: linear-gradient(90deg, #6366f1, #8b5cf6);
  opacity: 0;
  transition: opacity 0.3s ease;
}
.addressBlock:hover::before { opacity: 1; }
.addressBlock:hover {
  background: rgba(255, 255, 255, 0.95);
  border-color: rgba(99, 102, 241, 0.3);
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(99, 102, 241, 0.15);
}
.addressBlock p {
  margin: 0 0 0.5rem 0;
  color: #1f2937;
  font-weight: 500;
  font-size: 1rem;
  line-height: 1.5;
}
.addressBlock p:last-child { margin-bottom: 0; }
.addressBlock p:empty::after {
  content: "Address not provided";
  color: #9ca3af;
  font-style: italic;
  font-weight: 400;
}

/* ===== Form Inputs ===== */
.input, .textarea {
  width: 100%;
  padding: 1rem;
  background: rgba(255, 255, 255, 0.9);
  border: 1px solid rgba(209, 213, 219, 0.8);
  border-radius: 1rem;
  color: #374151;
  font-size: 1rem;
  outline: none;
  transition: all 0.3s ease;
  font-family: inherit;
}
.input::placeholder, .textarea::placeholder { color: #9ca3af; }
.input:focus, .textarea:focus {
  border-color: #6366f1;
  box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);
  background: rgba(255, 255, 255, 1);
  transform: translateY(-1px);
}

.inputError {
  border-color: #ef4444;
  background: rgba(254, 242, 242, 0.9);
}
.inputError:focus {
  border-color: #ef4444;
  box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.1);
}

.errorText {
  color: #ef4444;
  font-size: 0.85rem;
  margin-top: 0.25rem;
  font-weight: 500;
}

.textarea { resize: vertical; min-height: 80px; }

/* ===== Coordinate Fields ===== */
.coordinateGrid {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 0.75rem;
}
.coordinateField { position: relative; }
.coordinateField::before {
  content: '';
  position: absolute;
  left: 0.75rem;
  top: 50%;
  transform: translateY(-50%);
  width: 10px; height: 10px;
  background: linear-gradient(135deg, #10b981, #34d399);
  border-radius: 50%;
  z-index: 1;
}
.coordinateField .input { padding-left: 2.25rem; }

/* ===== Role Badge ===== */
.roleBadge {
  display: inline-flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem 1rem;
  background: linear-gradient(135deg, #f59e0b, #fbbf24);
  color: white;
  border-radius: 999px;
  font-size: 0.875rem;
  font-weight: 600;
  box-shadow: 0 4px 15px rgba(245, 158, 11, 0.3);
  text-transform: capitalize;
}
.roleBadge::before { content: 'üë®‚Äçüíº'; font-size: 1rem; }
.roleBadge[data-role="coach"]::before { content: 'üèÜ'; }

/* ===== Responsive ===== */
@media (max-width: 768px) {
  .modalContent { padding: 1.5rem; border-radius: 1.5rem; }
  .modalHeader { flex-direction: column; gap: 1rem; align-items: stretch; text-align: center; }
  .actions { flex-direction: column; width: 100%; }
  .editButton, .deleteButton, .saveButton, .closeButton { width: 100%; }
  .infoGrid { grid-template-columns: 1fr; }
  .coordinateGrid { grid-template-columns: 1fr; }
  .modalTitle { font-size: 1.5rem; }
}
